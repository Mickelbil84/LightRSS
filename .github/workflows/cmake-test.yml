# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: Test

on:
    push:
        branches: [ "main" ]
    pull_request:
        branches: [ "main" ]

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [windows-latest,]
                build_type: [Release]
                c_compiler: [cl]
                include:
                    -   os: windows-latest
                        c_compiler: cl
                        cpp_compiler: cl
            
        steps:
            -   uses: actions/checkout@v3
            -   name: Set reusable strings
                # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
                id: strings
                shell: bash
                run: |
                    echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

            -   name: Get conan
                uses: turtlebrowser/get-conan@main
            
            -   name: Create default profile
                run: conan profile detect

            -   name: Cache Conan
                uses: actions/cache@v4
                with:
                    path: ~/.conan2
                    key: ${{ runner.os }}-conan-${{ hashFiles('**/conanfile.*') }}
                    restore-keys: |
                        ${{ runner.os }}-conan-
            
            # Note that although we support C++11, MSVC forces us to specify at least C++14
            -   name: Install dependencies
                run: |
                    conan install . -s build_type=${{matrix.build_type}} --output-folder=. --build=missing -s compiler.cppstd=14 
            
            -   name: Configure CMake
                run: >
                    cmake -B ${{ steps.strings.outputs.build-output-dir }}
                    -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
                    -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
                    -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
                    -DCMAKE_TOOLCHAIN_FILE="conan_toolchain.cmake"
                    -DBUILD_TESTING=true
                    -S ${{ github.workspace }}

            -   name: Build
                run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}
            
            -   name: Test
                working-directory: ${{ steps.strings.outputs.build-output-dir }}
                run: ctest --test-dir tests --build-config ${{ matrix.build_type }} --output-on-failure
